version: '3.8'

services:
  frontend:
    container_name: frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "4200:80"
    depends_on:
      - backend
    networks:
      - app-network
  
  backend:
    container_name: backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "4201:8080"
    environment:
      - ConnectionStrings__PGConnectionString=Host=postgres;Port=5432;Database=postgres;Username=postgres;Password=mysecretpassword ##SHOULD BE HIDDEN
      - Jwt__Key=qj7orFe/6Z4vkQyqUWhdvbgtqKHj/WogeUhg3vKOiaR1rhBuTPBur2xaQqKoWf0+u2i4aTjchQTKQ4XrcBypPNKjiZfCkoe/gZMx/EDMGeVuMjRTWQ29Yg+G1beKb8sQI4erQdZmyqNstYBr7dgDXgMSepsf3Facl0JvPhwCYAI= ##SHOULD BE HIDDEN
    networks:
      - app-network

  postgres:
    image: postgres
    container_name: some-postgres
    environment:
      POSTGRES_PASSWORD: mysecretpassword
      POSTGRES_USER: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge